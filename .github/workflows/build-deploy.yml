on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
    secrets:
      PROD_CLOUD_SSH_URI:
        required: true
      PROD_CLOUD_SSH_HOST:
        required: true
      PROD_CLOUD_SSH_PORT:
        required: true
      PROD_CLOUD_SSH_KEY:
        required: true
      PROD_CLOUD_PROJECT_ROOT:
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.16
          check-latest: true
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Setup utilities
        run: |
          sudo apt-get update
          sudo apt-get -y install zstd
      - name: Install dependencies
        run: pnpm -F ${{ inputs.package }} install
      - name: Build standalone server
        run: 'pnpm run build:${{ inputs.package }}'
      - name: Package the build
        run: |
          cd package/${{ inputs.package }}
          tar -cvf build.tar .output ecosystem.config.js
          zstd -11 -T0 build.tar
      - name: Store the build as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ inputs.package }}-${{ github.ref }}-${{ github.sha }}
          path: build.tar.zst

  deploy-prod:
    name: Deploy to production
    if: github.repository == 'ThrRip/mzg.fan' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-22.04
    env:
      MASKING_PROD_CLOUD_SSH_HOST: ${{ secrets.PROD_CLOUD_SSH_HOST }}
    steps:
      - name: Setup utilities
        run: |
          sudo apt-get update
          sudo apt-get -y install rsync
      - name: Retrieve the build
        uses: actions/download-artifact@v3
        with:
          name: build-${{ inputs.package }}-${{ github.ref }}-${{ github.sha }}
      - name: Retrieve the SSH key
        run: |
          mkdir ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.PROD_CLOUD_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
      - name: Upload the build
        run: |
          rsync -ahP \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ secrets.PROD_CLOUD_SSH_PORT }}" \
            build.tar.zst \
            ${{ secrets.PROD_CLOUD_SSH_URI }}:"${{ secrets.PROD_CLOUD_PROJECT_ROOT }}/${{ inputs.package }}"
      - name: Replace the last build
        run: |
          ssh \
            -i ~/.ssh/id_ed25519 \
            -o StrictHostKeyChecking=no \
            -p ${{ secrets.PROD_CLOUD_SSH_PORT }} \
            ${{ secrets.PROD_CLOUD_SSH_URI }} <<END
          shopt -s extglob
          cd "${{ secrets.PROD_CLOUD_PROJECT_ROOT }}/${{ inputs.package }}"
          pm2 stop mzg.fan-${{ inputs.package }}
          pm2 delete mzg.fan-${{ inputs.package }}
          rm -fr !(build.tar.zst)
          zstd -d build.tar.zst
          tar -xvf build.tar
          rm -f build.tar.zst build.tar
          pm2 start ecosystem.config.js
          pm2 save
          END
